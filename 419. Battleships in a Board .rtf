{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12600\viewh10200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 public class Solution \{\
	static public int countBattleships(char[][] board) \{\
		Map<Integer, ArrayList<Integer>> battleships = new HashMap();\
		int count = 0;\
		for (int i = 0; i < board.length; i++) \{\
			for (int j = 0; j < board[i].length; j++) \{\
				if (board[i][j] == 'X'\
						&& (!battleships.containsKey(i) || !battleships.get(i)\
								.contains(j))) \{\
					if (battleships.containsKey(i)) \{\
						battleships.get(i).add(j);\
					\} else \{\
						battleships.put(i, new ArrayList());\
						battleships.get(i).add(j);\
					\}\
					int x = i;\
					int y = j;\
					// Find vertical battleship\
					while (x < board.length - 1 && board[x + 1][y] == 'X') \{\
						if (battleships.containsKey(x + 1)) \{\
							battleships.get(x + 1).add(y);\
						\} else \{\
							battleships.put(x + 1, new ArrayList());\
							battleships.get(x + 1).add(y);\
						\}\
						x++;\
					\}\
					x = i;\
					y = j;\
					// Find horizontal battleship\
					while (y < board[i].length - 1 && board[x][y + 1] == 'X') \{\
						if (battleships.containsKey(x)) \{\
							battleships.get(x).add(y + 1);\
						\} else \{\
							battleships.put(x, new ArrayList());\
							battleships.get(x).add(y + 1);\
						\}\
						y++;\
					\}\
					count++;\
				\}\
			\}\
\
		\}\
		return count;\
	\}	\
\}  \
\
\
}