{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12600\viewh10200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 public class Solution \{\
    public int hammingDistance(int x, int y) \{\
        int count = 0;\
        String hammingDistance = Integer.toBinaryString(x^y);\
        for (int i = 0; i < hammingDistance.length(); i++)\{\
            if(hammingDistance.charAt(i) == '1')\{\
                count++;\
            \}\
        \}   \
        return count;\
    \}\
\}}