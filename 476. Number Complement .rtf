{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12600\viewh10200\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 public class Solution \{\
    public int findComplement(int num) \{\
        String binaryNum = Integer.toBinaryString(num);\
        StringBuilder binaryNumBuilder = new StringBuilder(binaryNum);\
        \
        for (int i = 0; i < binaryNum.length(); i++)\{\
            if(binaryNum.charAt(i) == '0')\{\
                binaryNumBuilder.setCharAt(i, '1');\
            \}\
            else \{\
                binaryNumBuilder.setCharAt(i, '0');\
            \}\
        \}\
        int decimalNum = Integer.parseInt(binaryNumBuilder.toString(), 2);\
        \
        return decimalNum;\
    \}\
\}}